#include <iostream>
#include <iomanip>
using namespace std;

double pow(double x, int n) {
	if (n < 0) {
		x = 1 / x;
		n = -n;
	}

	double result = 1.0;
	while (n > 0) {
		if (n % 2 == 1) {
			result *= x;
		}
		x *= x;
		n /= 2;
	}
	return result;
}

int main() {
	double x;
	int n;

	cout << "Enter daily energy production (kWh): ";
	cin >> x;
	cout << "Enter number of days: ";
	cin >> n;

	double totalEnergy = pow(x, n);
	cout << fixed << setprecision(5);
	cout << "Total energy generated over " << n << " days: " << totalEnergy << " kWh" << endl;

	return 0;
}

/*
  Ques 1. Imagine you are working on the development of a solar power calculator. The calculator needs to estimate how much solar energy can be generated over a certain period, assuming that the solar panels produce a specific amount of energy every day.

  You have the following parameters:
  
  x: The amount of energy (in kilowatt-hours) generated by the solar panels in one day.
  n: The number of days the solar panels will operate.
  Your task is to implement a function that calculates the total energy generated over n days. The formula to calculate the energy over multiple days is the power of x raised to n, i.e., x^n, where x is the daily energy production, and n is the number of days.
  
  Implement a function pow(x, n) that calculates x raised to the power of n (i.e., x^n).
  Example:
  Input:
  
  x = 2.00000 (the solar panels produce 2 kWh/day)
  n = 10 (over 10 days)
  Output:
  
  1024.00000 kWh (the total energy produced over 10 days)
  Explanation:
  In this example, the panels produce 2 kWh per day, and you want to find out how much energy will be produced over 10 days. The answer is 2^10 = 1024 kWh, which is the total energy generated.
  
  Write a function to efficiently compute the result for large values of n as well.
*/
